(in-package #:egl)
;; Generated by WHAT-THE-FFI

;;------------------------------------------------------------------------------
;; (/opt/vc/include/EGL/egl.h:323:8)
;;
(declaim (inline &get-proc-address))
(defcfun ("eglGetProcAddress" &get-proc-address) :POINTER
  "see: (/opt/vc/include/EGL/egl.h:323:8)"
  (procname  (:pointer :CHAR)) ;; procname
)
;;------------------------------------------------------------------------------
;; (/opt/vc/include/EGL/egl.h:313:31)
;;
(declaim (inline &copy-buffers))
(defcfun ("eglCopyBuffers" &copy-buffers) :UINT
  "see: (/opt/vc/include/EGL/egl.h:313:31)"
  (dpy  (:pointer :VOID)) ;; dpy
  (surface  (:pointer :VOID)) ;; surface
  (target  (:pointer :VOID)) ;; target
)
;;------------------------------------------------------------------------------
;; (/opt/vc/include/EGL/egl.h:312:31)
;;
(declaim (inline &swap-buffers))
(defcfun ("eglSwapBuffers" &swap-buffers) :UINT
  "see: (/opt/vc/include/EGL/egl.h:312:31)"
  (dpy  (:pointer :VOID)) ;; dpy
  (surface  (:pointer :VOID)) ;; surface
)
;;------------------------------------------------------------------------------
;; (/opt/vc/include/EGL/egl.h:311:31)
;;
(declaim (inline &wait-native))
(defcfun ("eglWaitNative" &wait-native) :UINT
  "see: (/opt/vc/include/EGL/egl.h:311:31)"
  (engine  :INT) ;; engine
)
;;------------------------------------------------------------------------------
;; (/opt/vc/include/EGL/egl.h:310:31)
;;
(declaim (inline &wait-gl))
(defcfun ("eglWaitGL" &wait-gl) :UINT
  "see: (/opt/vc/include/EGL/egl.h:310:31)"
)
;;------------------------------------------------------------------------------
;; (/opt/vc/include/EGL/egl.h:307:31)
;;
(declaim (inline &query-context))
(defcfun ("eglQueryContext" &query-context) :UINT
  "see: (/opt/vc/include/EGL/egl.h:307:31)"
  (dpy  (:pointer :VOID)) ;; dpy
  (ctx  (:pointer :VOID)) ;; ctx
  (attribute  :INT) ;; attribute
  (value  (:pointer :INT)) ;; value
)
;;------------------------------------------------------------------------------
;; (/opt/vc/include/EGL/egl.h:306:31)
;;
(declaim (inline &get-current-display))
(defcfun ("eglGetCurrentDisplay" &get-current-display) (:pointer :VOID)
  "see: (/opt/vc/include/EGL/egl.h:306:31)"
)
;;------------------------------------------------------------------------------
;; (/opt/vc/include/EGL/egl.h:305:31)
;;
(declaim (inline &get-current-surface))
(defcfun ("eglGetCurrentSurface" &get-current-surface) (:pointer :VOID)
  "see: (/opt/vc/include/EGL/egl.h:305:31)"
  (readdraw  :INT) ;; readdraw
)
;;------------------------------------------------------------------------------
;; (/opt/vc/include/EGL/egl.h:304:31)
;;
(declaim (inline &get-current-context))
(defcfun ("eglGetCurrentContext" &get-current-context) (:pointer :VOID)
  "see: (/opt/vc/include/EGL/egl.h:304:31)"
)
;;------------------------------------------------------------------------------
;; (/opt/vc/include/EGL/egl.h:301:31)
;;
(declaim (inline &make-current))
(defcfun ("eglMakeCurrent" &make-current) :UINT
  "see: (/opt/vc/include/EGL/egl.h:301:31)"
  (dpy  (:pointer :VOID)) ;; dpy
  (draw  (:pointer :VOID)) ;; draw
  (read  (:pointer :VOID)) ;; read
  (ctx  (:pointer :VOID)) ;; ctx
)
;;------------------------------------------------------------------------------
;; (/opt/vc/include/EGL/egl.h:300:31)
;;
(declaim (inline &destroy-context))
(defcfun ("eglDestroyContext" &destroy-context) :UINT
  "see: (/opt/vc/include/EGL/egl.h:300:31)"
  (dpy  (:pointer :VOID)) ;; dpy
  (ctx  (:pointer :VOID)) ;; ctx
)
;;------------------------------------------------------------------------------
;; (/opt/vc/include/EGL/egl.h:297:31)
;;
(declaim (inline &create-context))
(defcfun ("eglCreateContext" &create-context) (:pointer :VOID)
  "see: (/opt/vc/include/EGL/egl.h:297:31)"
  (dpy  (:pointer :VOID)) ;; dpy
  (config  (:pointer :VOID)) ;; config
  (share-context  (:pointer :VOID)) ;; share_context
  (attrib-list  (:pointer :INT)) ;; attrib_list
)
;;------------------------------------------------------------------------------
;; (/opt/vc/include/EGL/egl.h:294:31)
;;
(declaim (inline &swap-interval))
(defcfun ("eglSwapInterval" &swap-interval) :UINT
  "see: (/opt/vc/include/EGL/egl.h:294:31)"
  (dpy  (:pointer :VOID)) ;; dpy
  (interval  :INT) ;; interval
)
;;------------------------------------------------------------------------------
;; (/opt/vc/include/EGL/egl.h:291:31)
;;
(declaim (inline &release-tex-image))
(defcfun ("eglReleaseTexImage" &release-tex-image) :UINT
  "see: (/opt/vc/include/EGL/egl.h:291:31)"
  (dpy  (:pointer :VOID)) ;; dpy
  (surface  (:pointer :VOID)) ;; surface
  (buffer  :INT) ;; buffer
)
;;------------------------------------------------------------------------------
;; (/opt/vc/include/EGL/egl.h:290:31)
;;
(declaim (inline &bind-tex-image))
(defcfun ("eglBindTexImage" &bind-tex-image) :UINT
  "see: (/opt/vc/include/EGL/egl.h:290:31)"
  (dpy  (:pointer :VOID)) ;; dpy
  (surface  (:pointer :VOID)) ;; surface
  (buffer  :INT) ;; buffer
)
;;------------------------------------------------------------------------------
;; (/opt/vc/include/EGL/egl.h:288:31)
;;
(declaim (inline &surface-attrib))
(defcfun ("eglSurfaceAttrib" &surface-attrib) :UINT
  "see: (/opt/vc/include/EGL/egl.h:288:31)"
  (dpy  (:pointer :VOID)) ;; dpy
  (surface  (:pointer :VOID)) ;; surface
  (attribute  :INT) ;; attribute
  (value  :INT) ;; value
)
;;------------------------------------------------------------------------------
;; (/opt/vc/include/EGL/egl.h:284:31)
;;
(declaim (inline &create-pbuffer-from-client-buffer))
(defcfun ("eglCreatePbufferFromClientBuffer" &create-pbuffer-from-client-buffer) (:pointer :VOID)
  "see: (/opt/vc/include/EGL/egl.h:284:31)"
  (dpy  (:pointer :VOID)) ;; dpy
  (buftype  :UINT) ;; buftype
  (buffer  (:pointer :VOID)) ;; buffer
  (config  (:pointer :VOID)) ;; config
  (attrib-list  (:pointer :INT)) ;; attrib_list
)
;;------------------------------------------------------------------------------
;; (/opt/vc/include/EGL/egl.h:282:31)
;;
(declaim (inline &release-thread))
(defcfun ("eglReleaseThread" &release-thread) :UINT
  "see: (/opt/vc/include/EGL/egl.h:282:31)"
)
;;------------------------------------------------------------------------------
;; (/opt/vc/include/EGL/egl.h:280:31)
;;
(declaim (inline &wait-client))
(defcfun ("eglWaitClient" &wait-client) :UINT
  "see: (/opt/vc/include/EGL/egl.h:280:31)"
)
;;------------------------------------------------------------------------------
;; (/opt/vc/include/EGL/egl.h:278:28)
;;
(declaim (inline &query-api))
(defcfun ("eglQueryAPI" &query-api) :UINT
  "see: (/opt/vc/include/EGL/egl.h:278:28)"
)
;;------------------------------------------------------------------------------
;; (/opt/vc/include/EGL/egl.h:277:31)
;;
(declaim (inline &bind-api))
(defcfun ("eglBindAPI" &bind-api) :UINT
  "see: (/opt/vc/include/EGL/egl.h:277:31)"
  (api  :UINT) ;; api
)
;;------------------------------------------------------------------------------
;; (/opt/vc/include/EGL/egl.h:274:31)
;;
(declaim (inline &query-surface))
(defcfun ("eglQuerySurface" &query-surface) :UINT
  "see: (/opt/vc/include/EGL/egl.h:274:31)"
  (dpy  (:pointer :VOID)) ;; dpy
  (surface  (:pointer :VOID)) ;; surface
  (attribute  :INT) ;; attribute
  (value  (:pointer :INT)) ;; value
)
;;------------------------------------------------------------------------------
;; (/opt/vc/include/EGL/egl.h:273:31)
;;
(declaim (inline &destroy-surface))
(defcfun ("eglDestroySurface" &destroy-surface) :UINT
  "see: (/opt/vc/include/EGL/egl.h:273:31)"
  (dpy  (:pointer :VOID)) ;; dpy
  (surface  (:pointer :VOID)) ;; surface
)
;;------------------------------------------------------------------------------
;; (/opt/vc/include/EGL/egl.h:270:31)
;;
(declaim (inline &create-pixmap-surface))
(defcfun ("eglCreatePixmapSurface" &create-pixmap-surface) (:pointer :VOID)
  "see: (/opt/vc/include/EGL/egl.h:270:31)"
  (dpy  (:pointer :VOID)) ;; dpy
  (config  (:pointer :VOID)) ;; config
  (pixmap  (:pointer :VOID)) ;; pixmap
  (attrib-list  (:pointer :INT)) ;; attrib_list
)
;;------------------------------------------------------------------------------
;; (/opt/vc/include/EGL/egl.h:268:31)
;;
(declaim (inline &create-pbuffer-surface))
(defcfun ("eglCreatePbufferSurface" &create-pbuffer-surface) (:pointer :VOID)
  "see: (/opt/vc/include/EGL/egl.h:268:31)"
  (dpy  (:pointer :VOID)) ;; dpy
  (config  (:pointer :VOID)) ;; config
  (attrib-list  (:pointer :INT)) ;; attrib_list
)
;;------------------------------------------------------------------------------
;; (/opt/vc/include/EGL/egl.h:265:31)
;;
(declaim (inline &create-window-surface))
(defcfun ("eglCreateWindowSurface" &create-window-surface) (:pointer :VOID)
  "see: (/opt/vc/include/EGL/egl.h:265:31)"
  (dpy  (:pointer :VOID)) ;; dpy
  (config  (:pointer :VOID)) ;; config
  (win  (:pointer :VOID)) ;; win
  (attrib-list  (:pointer :INT)) ;; attrib_list
)
;;------------------------------------------------------------------------------
;; (/opt/vc/include/EGL/egl.h:262:31)
;;
(declaim (inline &get-config-attrib))
(defcfun ("eglGetConfigAttrib" &get-config-attrib) :UINT
  "see: (/opt/vc/include/EGL/egl.h:262:31)"
  (dpy  (:pointer :VOID)) ;; dpy
  (config  (:pointer :VOID)) ;; config
  (attribute  :INT) ;; attribute
  (value  (:pointer :INT)) ;; value
)
;;------------------------------------------------------------------------------
;; (/opt/vc/include/EGL/egl.h:259:31)
;;
(declaim (inline &choose-config))
(defcfun ("eglChooseConfig" &choose-config) :UINT
  "see: (/opt/vc/include/EGL/egl.h:259:31)"
  (dpy  (:pointer :VOID)) ;; dpy
  (attrib-list  (:pointer :INT)) ;; attrib_list
  (configs  (:pointer (:pointer :VOID))) ;; configs
  (config-size  :INT) ;; config_size
  (num-config  (:pointer :INT)) ;; num_config
)
;;------------------------------------------------------------------------------
;; (/opt/vc/include/EGL/egl.h:257:31)
;;
(declaim (inline &get-configs))
(defcfun ("eglGetConfigs" &get-configs) :UINT
  "see: (/opt/vc/include/EGL/egl.h:257:31)"
  (dpy  (:pointer :VOID)) ;; dpy
  (configs  (:pointer (:pointer :VOID))) ;; configs
  (config-size  :INT) ;; config_size
  (num-config  (:pointer :INT)) ;; num_config
)
;;------------------------------------------------------------------------------
;; (/opt/vc/include/EGL/egl.h:255:33)
;;
(declaim (inline &query-string))
(defcfun ("eglQueryString" &query-string) (:pointer :CHAR)
  "see: (/opt/vc/include/EGL/egl.h:255:33)"
  (dpy  (:pointer :VOID)) ;; dpy
  (name  :INT) ;; name
)
;;------------------------------------------------------------------------------
;; (/opt/vc/include/EGL/egl.h:253:31)
;;
(declaim (inline &terminate))
(defcfun ("eglTerminate" &terminate) :UINT
  "see: (/opt/vc/include/EGL/egl.h:253:31)"
  (dpy  (:pointer :VOID)) ;; dpy
)
;;------------------------------------------------------------------------------
;; (/opt/vc/include/EGL/egl.h:252:31)
;;
(declaim (inline &initialize))
(defcfun ("eglInitialize" &initialize) :UINT
  "see: (/opt/vc/include/EGL/egl.h:252:31)"
  (dpy  (:pointer :VOID)) ;; dpy
  (major  (:pointer :INT)) ;; major
  (minor  (:pointer :INT)) ;; minor
)
;;------------------------------------------------------------------------------
;; (/opt/vc/include/EGL/egl.h:251:31)
;;
(declaim (inline &get-display))
(defcfun ("eglGetDisplay" &get-display) (:pointer :VOID)
  "see: (/opt/vc/include/EGL/egl.h:251:31)"
  (display-id  :uint) ;; display_id
)
;;------------------------------------------------------------------------------
;; (/opt/vc/include/EGL/egl.h:249:27)
;;
(declaim (inline &get-error))
(defcfun ("eglGetError" &get-error) :INT
  "see: (/opt/vc/include/EGL/egl.h:249:27)"
)
